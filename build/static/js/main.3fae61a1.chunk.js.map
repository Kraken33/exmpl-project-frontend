{"version":3,"sources":["store/preloader/actions.ts","store/preloader/reducers.ts","layouts/consts.ts","store/autheticate/sagas.ts","routes/consts.ts","utils/loadable.ts","components/app/container.ts","components/app/view.tsx","components/breadcrumbs/container.ts","components/breadcrumbs/view.tsx","store/preloader/selectors.ts","components/button/container.ts","components/button/view.tsx","utils/location.ts","utils/redux-form-validation.ts","services/permission/actions.ts","store/autheticate/reducers.ts","services/http/index.tsx","components/form-controls/controler/types.ts","components/form-item/view.tsx","components/form-controls/checkbox/view.tsx","components/form-controls/code/view.tsx","components/form-controls/input/view.tsx","components/form-controls/switch/view.tsx","components/form-controls/controler/view.tsx","services/api/routes.ts","services/api/index.ts","services/api/account/index.ts","services/api/authenticate/index.ts","assets/images/logo.svg","components/breadcrumbs/index.module.scss","index.tsx","store/layout/selectors.ts","store/selectors.ts","layouts/base/view.tsx","layouts/base/container.ts","layouts/index.ts","layouts/empty/view.tsx","routes/routes-tree.ts","routes/index.ts","consts/app-config.ts","consts/api.ts","consts/common.ts","consts/env.ts","services/permission/module.tsx","store/autheticate/selectors.ts","routes/router.tsx","store/layout/actions.ts","services/intl/module.tsx","services/intl/consts.ts","services/intl/actions.ts","routes/history.ts","utils/errors.ts","store/layout/reducers.ts","store/reducers.ts","store/sagas.ts","store/store.ts","layouts/base/index.module.scss","store/autheticate/actions.ts","services/index.ts"],"names":["ETypes","addPreloader","createAction","ADD","removePreloader","REMOVE","entryReducer","createReducer","list","preloader","state","payload","push","preloaderName","filter","s","Layouts","authentication","entrySaga","type","put","actions","call","api","authenticate","login","permissions","token","setPermissions","authenticateReceive","redirect","AvailableRoutes","home","console","error","takeEvery","types","AUTHENTICATE_REQUEST","BASE_PATH","cache","loadable","cacheId","importFn","fallbackFn","delay","x","loadableComponent","pMinDelay","undefined","fallback","Container","defaultTitle","APP_NAME","titleTemplate","routers","withIntl","breadcrumbs","className","styles","map","index","breadcrumb","match","Item","key","length","isLast","to","url","getPreloader","createSelector","getPreloadersList","preloaderState","hasPreloader","preloaderNames","Array","isArray","some","name","includes","connect","ownProps","pending","on","wrapper","children","rest","props","icon","LoadingOutlined","disabled","routeName","args","history","getLink","getFormValues","formName","form","store","getState","values","fields","field","hasOwnProperty","warn","asyncValidate","apiHandler","handler","a","validate","err","errValues","errors","reduce","acc","set","param","replace","msg","validateFormatter","log","Object","keys","permissionEvent","emit","isAuthenticate","role","AUTHENTICATE_RECEIVER","http","axios","create","baseURL","BASE_API_URL","headers","HTTP_CONTENT_TYPES","json","Accept","interceptors","request","use","config","setToken2Header","data","response","FormControlTypes","Component","required","label","touched","valid","formItemProps","validateStatus","help","input","meta","attributes","onChange","checked","value","options","theme","lineNumbers","onBeforeChange","_","__","TextArea","Input","textarea","Field","component","componentTypeName","currentFormElement","password","switch","Switch","code","Code","checkbox","Checkbox","typeSwitcher","routes","account","signUp","info","get","credintals","post","module","exports","setTimeout","initIntl","setIntl","testKey","apiRequestPlaceholder","apiSubmitButtonLabel","apiRequestDataTypeHeader","apiRequestDataTypeJson","root","done","rootElement","document","getElementById","App","ReactDOM","render","selectNames","getLayoutState","getLayoutConfig","getSiderState","getRouterState","getRouterLocation","getLocationPathname","Header","Layout","Content","Footer","Sider","mapDispatch2Props","siderToggleState","EmptyLayout","BaseLayout","compose","layoutConfig","siderIsOpen","pathname","preparedRoutesForBreadcrumbs","menu","ReadyBreadcrumbs","withBreadcrumbs","excludePaths","Breadcrumbs","renderMenu","link","Icon","icons","onClick","layout","collapsible","collapsed","onCollapse","logo","logo_img","src","alt","href","logo_link","defaultSelectedKeys","mode","danger","router","content","site_layout_background","footer","dayjs","year","path","page","isGuest","pipe","HttpMethods","EMPTY_STRING","NODE_ENV","development","test","production","event","EventEmitter","createEvent","PermissionContext","React","createContext","PermissionProvider","useState","setPerrmissions","useEffect","subjectPermissions","removeAllListeners","Provider","withAuthentication","authenticateSelector","withPermissions","permissionName","useContext","forbiddenPage","getAuthenticateState","routesShape","dynamicPage","require","pendingComponent","extendRoute","exact","route","intl","breadcrumbKey","concat","toUpperCase","str","slice","wordWithoutFirstLetter","addPermissionWrapper","assign","buildRouter","Page","matchProps","FETCH_CONFIG_REQUEST","FETCH_CONFIG_RECEIVER","SIDER_TOGGLE_STATE","EVENTS","intlEvent","intlDictionary","IntlContext","IntlProvider","dictionary","pendingNode","showPreloader","setDictionary","setPending","currentDictionary","intlSelector","target","useIntl","conf","useMemo","Proxy","createBrowserHistory","basename","process","Error","createRootReducer","combineReducers","connectRouter","reducers","sagas","all","allSagas","saga","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","initialState","window","preloadedState","createStore","applyMiddleware","routerMiddleware","configureStore","run"],"mappings":"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","file":"static/js/main.3fae61a1.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nimport { IAddPreloaderPayload, IRemovePreloaderPayload } from \"./types\";\n\nexport enum ETypes {\n  ADD = \"@preloader/ADD\",\n  REMOVE = \"@preloader/REMOVE\",\n}\n\nexport const addPreloader = createAction<IAddPreloaderPayload>(ETypes.ADD);\nexport const removePreloader = createAction<IRemovePreloaderPayload>(\n  ETypes.REMOVE\n);\n","import { PayloadAction, createReducer } from \"@reduxjs/toolkit\";\n\nimport { ETypes as preloader } from \"./actions\";\nimport { IRemovePreloaderPayload, PreloaderStore } from \"./types\";\n\nconst initialState: PreloaderStore = {\n  list: [],\n};\n\nconst entryReducer = createReducer<any>(initialState, {\n  [preloader.ADD](state: PreloaderStore, { payload }) {\n    state.list.push(payload.preloaderName);\n\n    return state;\n  },\n\n  [preloader.REMOVE](\n    state: PreloaderStore,\n    { payload }: PayloadAction<IRemovePreloaderPayload>\n  ) {\n    state.list = state.list.filter((s: string) =>\n      s === payload.preloaderName ? 0 : 1\n    );\n\n    return state;\n  },\n});\n\nexport { entryReducer };\n","export enum Layouts {\n  EmptyLayout = \"EmptyLayout\",\n  BaseLayout = \"BaseLayout\",\n}\n","import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport { AvailableRoutes } from \"routes\";\nimport { api } from \"services\";\nimport { setPermissions } from \"services/permission\";\nimport { redirect } from \"utils\";\n\nimport { actions } from \"../preloader\";\nimport { authenticateReceive, ETypes as types } from \"./actions\";\n\nfunction* authentication({ type, payload }: PayloadAction<any>) {\n  try {\n    yield put(actions.addPreloader({ preloaderName: type }));\n    const { permissions, token } = yield call(api.authenticate.login, payload);\n    yield call(setPermissions, permissions);\n    yield put(authenticateReceive({ permissions, token }));\n    yield call(redirect, AvailableRoutes.home);\n  } catch (e) {\n    console.error(e);\n  } finally {\n    yield put(actions.removePreloader({ preloaderName: type }));\n  }\n}\n\nexport function* entrySaga(): Generator {\n  yield takeEvery(types.AUTHENTICATE_REQUEST, authentication);\n}\n","const BASE_PATH = \"/\";\n\nexport enum AvailableRoutes {\n  api = \"api\",\n  home = \"home\",\n  login = \"login\",\n}\n\nexport { BASE_PATH };\n","import loadableComponent from \"@loadable/component\";\nimport pMinDelay from \"p-min-delay\";\nimport React from \"react\";\n\nconst cache: {\n  [k: string]:\n    | undefined\n    | { fallback: React.ComponentType | Function }\n    | boolean;\n} = {};\n\nexport const loadable = (\n  cacheId: string,\n  importFn: () => Promise<any>,\n  fallbackFn: () => React.ReactNode,\n  delay = 500\n): React.ComponentType => {\n  const x = fallbackFn();\n  return loadableComponent(\n    () => {\n      if (cache[cacheId]) {\n        return importFn();\n      }\n      cache[cacheId] = true;\n      if (delay > 0) {\n        return pMinDelay(importFn(), delay);\n      }\n      return importFn();\n    },\n    cache[cacheId]\n      ? undefined\n      : {\n          fallback: typeof x === \"function\" ? x() : x,\n        }\n  );\n};\n","import { Component } from \"./view\";\n\nconst Container = Component;\n\nexport { Container };\n","import { APP_NAME } from \"consts\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { Switch } from \"react-router-dom\";\nimport { routers } from \"routes\";\n\nconst Component: React.FC = () => {\n  return (\n    <>\n      <Helmet defaultTitle={`${APP_NAME}`} titleTemplate={`%s | ${APP_NAME}`} />\n      <Switch>{routers}</Switch>\n    </>\n  );\n};\n\nexport { Component };\n","import { withIntl } from \"services/intl\";\n\nimport { Component } from \"./view\";\n\nconst Container = withIntl(Component as any);\n\nexport { Container };\n","import { Breadcrumb } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./index.module.scss\";\nimport { BreadcrumbComponent } from \"./types\";\n\nconst Component: React.FC<BreadcrumbComponent> = ({ breadcrumbs }) => {\n  const isLast = (index: number) => breadcrumbs.length - 1 !== index;\n\n  return (\n    <Breadcrumb className={styles.breadcrumbs}>\n      {breadcrumbs?.map(({ breadcrumb, match }, index) => {\n        return (\n          <Breadcrumb.Item key={breadcrumb.key}>\n            {!isLast(index) ? (\n              <Link to={match.url}>{breadcrumb}</Link>\n            ) : (\n              <span>{breadcrumb}</span>\n            )}\n          </Breadcrumb.Item>\n        );\n      })}\n    </Breadcrumb>\n  );\n};\n\nexport { Component };\n","import { createSelector } from \"reselect\";\n\nimport { IStoreState } from \"../types\";\nimport { PreloaderStore } from \"./types\";\n\nconst getPreloaderState = (state: IStoreState): PreloaderStore =>\n  state.preloader;\nconst preloaderNames = (\n  state: IStoreState,\n  preloaderNames: string | string[]\n): string[] => {\n  if (!Array.isArray(preloaderNames)) {\n    preloaderNames = [preloaderNames];\n  }\n  return preloaderNames;\n};\n\nexport const getPreloader = createSelector(\n  [getPreloaderState],\n  (preloader: PreloaderStore): PreloaderStore => preloader\n);\n\nexport const getPreloadersList = createSelector(\n  [getPreloader],\n  (preloaderState: PreloaderStore): any => preloaderState.list\n);\n\nexport const hasPreloader = createSelector(\n  [getPreloadersList, preloaderNames],\n  (list, preloaderNames): boolean => {\n    return preloaderNames.some((name) => list.includes(name));\n  }\n);\n","import { connect } from \"react-redux\";\nimport { hasPreloader } from \"store/preloader/selectors\";\nimport { IStoreState } from \"store/types\";\n\nimport { ButtonWaitProps } from \"./types\";\nimport { Component } from './view';\n\nconst mapStateToProps = (state: IStoreState, ownProps: ButtonWaitProps): any => {\n  return {\n    pending: hasPreloader(state, ownProps.on),\n  };\n};\n\nconst wrapper = connect(\n  mapStateToProps,\n  null\n);\n\nconst Container = wrapper(Component);\n\nexport { Container };\n","import { LoadingOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport React from \"react\";\n\nimport { ButtonProps } from \"./types\";\n\nconst Component: React.FC<ButtonProps> = ({ pending, children, ...rest }) => {\n  const props = {\n    ...rest,\n    ...(pending\n      ? { icon: pending ? <LoadingOutlined /> : undefined, disabled: true }\n      : {}),\n  };\n  return <Button {...props}>{children}</Button>;\n};\n\nexport { Component };\n","import { AvailableRoutes, getLink } from \"routes\";\nimport { history } from \"store\";\n\nconst redirect = (\n  routeName: keyof typeof AvailableRoutes,\n  ...args: any[]\n): void => {\n  history.push(getLink(routeName, ...args));\n};\n\nexport { redirect };\n","import { set } from \"lodash/fp\";\nimport { FormState } from \"redux-form\";\n\nimport { store } from \"../store\";\n\nconst getFormValues = (formName: string) => {\n  const form = store.getState().form[formName] as FormState;\n  if (form) {\n    const values = form.values || {};\n    const fields = form.fields || {};\n\n    for (const field in fields) {\n      if (!fields.hasOwnProperty(field)) continue;\n      if (!(field in values)) {\n        values[field] = \"\";\n      }\n    }\n\n    return values;\n  }\n  console.warn(\n    `Unknown from name \\`${formName}\\`. Please, provide correct form name`\n  );\n  return {};\n};\n\nconst asyncValidate = ({\n  apiHandler,\n  formName,\n  handler,\n}: {\n  apiHandler: Function;\n  formName: string;\n  handler?: any;\n}) => async (): Promise<any> => {\n  let values: any = {\n    ...getFormValues(formName),\n  } as any;\n  values.validate = true;\n  if (handler) values = handler(values);\n  const err: any = await apiHandler(values);\n  // eslint-disable-next-line no-shadow\n  const validateFormatter = (errors: any) =>\n    errors.reduce((acc: any, err: any) => {\n      acc = set(err.param.replace(/\\.(\\d)\\./, \"[$1]\"), err.msg)(acc);\n      return acc;\n    }, {});\n  const errValues = validateFormatter(err.errors);\n  console.log(err, errValues, \"err.data.data\");\n  if (Object.keys(errValues).length) throw errValues;\n};\n\nexport { asyncValidate };\n","import { permissionEvent } from \"./module\";\n\nconst setPermissions = (permissions: string[]): void =>\n  permissionEvent.emit(permissionEvent.name, permissions);\n\nexport { setPermissions };\n","import { PayloadAction, createReducer } from \"@reduxjs/toolkit\";\n\nimport { ETypes as types } from \"./actions\";\nimport { AuthenticateStore } from \"./types\";\n\nexport const initialState: AuthenticateStore = {\n  isAuthenticate: false,\n  permissions: [\"home\"],\n  role: null,\n  token: null,\n};\n\nexport const entryReducer = createReducer(initialState, {\n  [types.AUTHENTICATE_RECEIVER]: (\n    state: AuthenticateStore,\n    { payload }: PayloadAction<any>\n  ) => {\n    state.isAuthenticate = true;\n    state.token = payload.token;\n    state.permissions = payload.permissions;\n\n    return state;\n  },\n});\n","import axios, {\n  AxiosError,\n  AxiosInstance,\n  AxiosRequestConfig,\n  AxiosResponse,\n} from \"axios\";\nimport { BASE_API_URL, HTTP_CONTENT_TYPES } from \"consts\";\nimport { store } from \"store\";\nimport { IStoreState } from \"store/types\";\n\nconst http: AxiosInstance = axios.create({\n  baseURL: BASE_API_URL,\n  headers: {\n    \"Content-Type\": HTTP_CONTENT_TYPES.json,\n    Accept: HTTP_CONTENT_TYPES.json,\n    \"Admin-Panel\": true,\n  },\n});\n\nconst requestInterceptor = (config: AxiosRequestConfig) => {\n  const token = (store.getState() as IStoreState).authenticate.token;\n  const setToken2Header = (token: string) => {\n    config.headers[\"X-Token\"] = token;\n  };\n  const setValidateOnly2Header = () => {\n    config.headers[\"X-Validate-Only\"] = true;\n  };\n\n  token && setToken2Header(token);\n  config?.data?.validate && setValidateOnly2Header();\n\n  return config;\n};\n\nhttp.interceptors.request.use(requestInterceptor);\n\nhttp.interceptors.response.use(\n  (response: AxiosResponse<any>): AxiosResponse => response.data,\n  (error: AxiosError): never => {\n    throw error;\n  }\n);\n\nexport { http };\n","import { FControlInput } from \"../input/types\";\n\nexport enum FormControlTypes {\n  input = \"input\",\n  textarea = \"textarea\",\n  switch = \"switch\",\n  code = \"code\",\n  password = \"password\",\n  checkbox = \"checkbox\",\n}\n\nexport type Types = keyof typeof FormControlTypes;\n\nexport type Dictionary = {\n  [k in FormControlTypes]: any;\n};\n\nexport type Control = {\n  type: Types;\n} & FControlInput &\n  any;\n","import { Form } from \"antd\";\nimport { FormItemProps } from \"antd/lib/form\";\nimport React from \"react\";\n\nimport { FormItem } from \"./types\";\n\nconst Component: React.FC<FormItem> = ({\n  children,\n  required,\n  label,\n  touched,\n  valid,\n  error,\n}) => {\n  const formItemProps: FormItemProps = {\n    label: required ? `${label}*` : label,\n    validateStatus: touched && !valid ? \"error\" : undefined,\n    help: touched && error ? error : null,\n  };\n\n  return <Form.Item {...formItemProps}>{children}</Form.Item>;\n};\n\nexport { Component };\n","import { Checkbox } from \"antd\";\nimport FormItem from \"components/form-item\";\nimport React from \"react\";\n\nimport { FControlCheckbox } from \"./types\";\n\nconst Component: React.FC<FControlCheckbox> = ({\n  input,\n  meta,\n  type,\n  label,\n  required,\n  ...attributes\n}) => {\n  return (\n    <FormItem required={required} label={label} {...meta}>\n      <Checkbox\n        onChange={input.onChange}\n        checked={input.value}\n        {...attributes}\n      />\n    </FormItem>\n  );\n};\n\nexport { Component };\n","import FormItem from \"components/form-item\";\nimport React from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\n\nimport { FControlCode } from \"./types\";\n\nconst Component: React.FC<FControlCode> = ({\n  input,\n  meta,\n  type,\n  label,\n  required,\n  ...attributes\n}) => {\n  return (\n    <FormItem required={required} label={label} {...meta}>\n      <CodeMirror\n        {...attributes}\n        options={{\n          theme: \"material\",\n          lineNumbers: true,\n        }}\n        value={input.value}\n        onBeforeChange={(_, __, value) => {\n          input.onChange(value);\n        }}\n      />\n    </FormItem>\n  );\n};\n\nexport { Component };\n","import { Input } from \"antd\";\nimport FormItem from \"components/form-item\";\nimport React from \"react\";\n\nimport { FormControlTypes } from \"../controler/types\";\nimport { FControlInput } from \"./types\";\n\nconst { TextArea } = Input;\n\nconst Component: React.FC<FControlInput> = ({\n  input,\n  meta,\n  type,\n  label,\n  required,\n  ...attributes\n}) => {\n  return (\n    <FormItem required={required} label={label} {...meta}>\n      {type === FormControlTypes.textarea ? (\n        <TextArea {...input} {...attributes} />\n      ) : (\n        <Input {...input} {...attributes} type={type} />\n      )}\n    </FormItem>\n  );\n};\n\nexport { Component };\n","import { Form, Switch } from \"antd\";\nimport { FormItemProps } from \"antd/lib/form\";\nimport React from \"react\";\n\nimport { FControlInput } from \"./types\";\n\nconst Component: React.FC<FControlInput> = ({\n  input,\n  meta,\n  label,\n  required,\n  ...attributes\n}) => {\n  const formItemProps: FormItemProps = {\n    label: required ? `${label}*` : label,\n    validateStatus: meta.touched && !meta.valid ? \"error\" : undefined,\n    help: meta.touched && meta.error ? meta.error : null,\n  };\n\n  return (\n    <Form.Item {...formItemProps}>\n      <Switch {...attributes} checked={input.value} onChange={input.onChange} />\n    </Form.Item>\n  );\n};\n\nexport { Component };\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport { error } from \"utils/errors\";\n\nimport { Checkbox } from \"../checkbox\";\nimport { Code } from \"../code\";\nimport { Input } from \"../input\";\nimport { Switch } from \"../switch\";\nimport { Control, Dictionary, Types } from \"./types\";\n\nconst Component: React.FC<Control> = ({ type, ...props }) => {\n  const typeSwitcher = (componentTypeName: Types) => {\n    const typesDictionary: Dictionary = {\n      input: Input,\n      textarea: Input,\n      password: Input,\n      switch: Switch,\n      code: Code,\n      checkbox: Checkbox,\n    };\n    const currentFormElement = typesDictionary[componentTypeName];\n\n    !currentFormElement &&\n      error(`Type ${componentTypeName} missing in form control types!`);\n\n    return currentFormElement || Input;\n  };\n\n  return (\n    <Field {...(props as any)} type={type} component={typeSwitcher(type)} />\n  );\n};\n\nexport { Component };\n","const routes = {\n  account: () => \"/account\",\n  login: () => \"/login\",\n  signUp: () => \"/signUp\",\n};\n\nexport { routes };\n","import { account } from \"./account\";\nimport { authenticate } from \"./authenticate\";\nimport { IApi } from \"./types\";\n\nconst api: IApi = {\n  account,\n  authenticate,\n};\n\nexport { api };\nexport { routes } from \"./routes\";\n","import { http } from \"services\";\n\nimport { routes } from \"../routes\";\nimport { AcountApi } from \"./types\";\n\nexport const account: AcountApi = {\n  info: () => http.get(routes.account()),\n};\n","import { http } from \"services\";\n\nimport { routes } from \"../routes\";\nimport { AuthenticateApi } from \"./types\";\n\nexport const authenticate: AuthenticateApi = {\n  login: (credintals) => http.post(routes.login(), credintals),\n  signUp: (credintals) => http.post(routes.signUp(), credintals),\n};\n","module.exports = __webpack_public_path__ + \"static/media/logo.9d0b0345.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbs\":\"breadcrumbs_breadcrumbs__3yr-a\"};","import \"assets/styles/app.css\";\nimport \"assets/styles/index.scss\";\n\nimport { App } from \"components\";\nimport { ConnectedRouter as ConnectedRouterProvider } from \"connected-react-router\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { history } from \"routes/history\";\nimport { IntlProvider, initIntl, setIntl } from \"services/intl\";\nimport { PermissionProvider } from \"services/permission\";\nimport { store } from \"store\";\n\nsetTimeout(() => {\n  initIntl();\n}, 0);\n\nsetTimeout(() => {\n  setIntl({\n    testKey: \"test\",\n    apiRequestPlaceholder: \"Placeholder\",\n    apiSubmitButtonLabel: \"Send\",\n    apiRequestDataTypeHeader: \"Header\",\n    apiRequestDataTypeJson: \"JSON\",\n  });\n  // setPermissions([\"home\", \"login\"]);\n}, 0);\n\nconst rootElement = document.getElementById(\"root\") as HTMLElement;\nconst render = (\n  Component: React.ElementType,\n  root: Element,\n  done?: () => void\n) => {\n  ReactDOM.render(\n    <PermissionProvider>\n      <IntlProvider>\n        <ReduxProvider store={store}>\n          <ConnectedRouterProvider history={history}>\n            <Component />\n          </ConnectedRouterProvider>\n        </ReduxProvider>\n      </IntlProvider>\n    </PermissionProvider>,\n    root,\n    done\n  );\n};\n\nrender(App, rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import { get } from \"lodash/fp\";\nimport { createSelector } from \"reselect\";\n\nexport const selectNames = {\n  layout: \"layout\",\n  config: \"config\",\n  siderIsOpen: \"siderIsOpen\",\n};\n\nconst getLayoutState = get(selectNames.layout);\n\nconst getLayoutConfig = createSelector(\n  [getLayoutState],\n  get(selectNames.config)\n);\n\nconst getSiderState = createSelector(\n  [getLayoutState],\n  get(selectNames.siderIsOpen)\n);\n\nexport { getLayoutConfig, getSiderState };\n","import { get } from \"lodash/fp\";\nimport { createSelector } from \"reselect\";\n\nexport const selectNames = {\n  router: \"router\",\n  location: \"location\",\n  pathname: \"pathname\",\n};\n\nconst getRouterState = get(selectNames.router);\n\nconst getRouterLocation = createSelector(\n  [getRouterState],\n  get(selectNames.location)\n);\n\nconst getLocationPathname = createSelector(\n  [getRouterLocation],\n  get(selectNames.pathname)\n);\n\nexport { getLocationPathname };\n","import * as icons from \"@ant-design/icons\";\nimport { Layout, Menu } from \"antd\";\nimport logo from \"assets/images/logo.svg\";\nimport { Breadcrumbs } from \"components\";\nimport { APP_NAME } from \"consts\";\nimport dayjs from \"dayjs\";\nimport { map } from \"lodash/fp\";\nimport React from \"react\";\nimport withBreadcrumbs from \"react-router-breadcrumbs-hoc\";\nimport { history } from \"routes\";\nimport * as router from \"routes/router\";\n\nimport styles from \"./index.module.scss\";\nimport { BaseLayout } from \"./types\";\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst Component: React.FC<BaseLayout> = ({\n  children,\n  pathname,\n  layoutConfig,\n  siderIsOpen,\n  siderToggleState,\n  preparedRoutesForBreadcrumbs,\n}) => {\n  const { menu } = layoutConfig;\n\n  const ReadyBreadcrumbs = withBreadcrumbs([...preparedRoutesForBreadcrumbs], {\n    excludePaths: [],\n  })(Breadcrumbs as React.ComponentType<any>);\n\n  const renderMenu = map(({ label, icon, link }) => {\n    // @ts-ignore\n    const Icon = icons[icon];\n    return (\n      <Menu.Item\n        key={link}\n        icon={icon ? <Icon /> : null}\n        onClick={() => history.push(link)}\n      >\n        {label}\n      </Menu.Item>\n    );\n  });\n\n  return (\n    <Layout className={styles.layout}>\n      <Sider collapsible collapsed={siderIsOpen} onCollapse={siderToggleState}>\n        <div className={styles.logo}>\n          <img className={styles.logo_img} src={logo} alt=\"Main logo\" />\n          <a href=\"/\" className={styles.logo_link}>\n            Kraken 33\n          </a>\n        </div>\n        <Menu theme=\"dark\" defaultSelectedKeys={[pathname]} mode=\"inline\">\n          {renderMenu(menu)}\n          <Menu.Item\n            danger\n            key={router.getLink(\"api\")}\n            icon={<icons.CloudDownloadOutlined />}\n            onClick={() => history.push(router.getLink(\"api\"))}\n          >\n            API\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header />\n        <Content className={styles.content}>\n          <ReadyBreadcrumbs />\n          <div className={styles.site_layout_background}>{children}</div>\n        </Content>\n        <Footer className={styles.footer}>\n          {APP_NAME} ©{dayjs().year()} Created by <a href=\"/\">kraken33</a>\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport { Component };\n","import { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport { siderToggleState } from \"store/layout/actions\";\nimport { getLayoutConfig, getSiderState } from \"store/layout/selectors\";\nimport { getLocationPathname } from \"store/selectors\";\n\nimport { BaseLayout, MapState2Props } from \"./types\";\nimport { Component } from \"./view\";\n\nconst mapState2Props: MapState2Props = (state) => ({\n  layoutConfig: getLayoutConfig(state),\n  siderIsOpen: getSiderState(state),\n  pathname: getLocationPathname(state),\n});\n\nconst mapDispatch2Props = {\n  siderToggleState,\n};\n\nconst wrapper = compose<BaseLayout, any>(\n  connect(mapState2Props, mapDispatch2Props)\n);\n\nconst Container = wrapper(Component);\n\nexport { Container };\n","import { BaseLayout } from \"./base\";\nimport { EmptyLayout } from \"./empty\";\nimport { LayoutsType } from \"./types\";\n\nexport const Layouts: LayoutsType = {\n  EmptyLayout,\n  BaseLayout,\n};\n","import React from \"react\";\n\nconst View: React.FC = ({ children }) => <div>{children}</div>;\n\nexport { View };\n","import { Layouts } from \"layouts/consts\";\n\nimport { Routes } from \"./types\";\n\nconst routes: Routes = [\n  {\n    name: \"home\",\n    path: \"/\",\n    page: import(\"pages/home\"),\n  },\n  {\n    name: \"api\",\n    path: \"/api\",\n    page: import(\"pages/api\"),\n  },\n  {\n    name: \"login\",\n    path: \"/login\",\n    layout: Layouts.EmptyLayout,\n    page: import(\"pages/login\"),\n    isGuest: true,\n  },\n];\n\nexport { routes };\n","import { map, pipe } from \"lodash/fp\";\n\nimport { history } from \"./history\";\nimport * as router from \"./router\";\nimport { routes } from \"./routes-tree\";\n\nconst routers = router.buildRouter(\n  map(pipe(router.extendRoute, router.addPermissionWrapper))(routes)\n);\n\nexport { routers, history, router };\nexport { getLink } from \"./router\";\nexport { AvailableRoutes } from \"./consts\";\n","const APP_NAME = \"exmpl front-end\";\nconst BASE_API_URL = \"http://localhost:3001/\";\n\nexport { APP_NAME, BASE_API_URL };\n","const HTTP_CONTENT_TYPES = {\n  json: \"application/json\",\n};\n\nenum HttpMethods {\n  \"POST\" = \"POST\",\n  \"GET\" = \"GET\",\n  \"PUT\" = \"PUT\",\n  \"DELETE\" = \"DELETE\",\n}\n\nexport { HTTP_CONTENT_TYPES, HttpMethods };\n","const EMPTY_STRING = \"\";\n\nexport { EMPTY_STRING };\n","const NODE_ENV = {\n  development: \"development\",\n  test: \"test\",\n  production: \"production\",\n};\n\nexport { NODE_ENV };\n","import { EventEmitter } from \"events\";\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvailableRoutes } from \"routes\";\nimport { redirect } from \"utils\";\nimport { error } from \"utils/errors\";\n\nimport { WithPerrmissionOptions } from \"./types\";\n\nconst createEvent = () => {\n  const event: any = new EventEmitter();\n  const eventName = \"permissions:set\";\n\n  event.name = eventName;\n\n  return event;\n};\n\nconst permissionEvent = createEvent();\n\nconst PermissionContext = React.createContext([]);\n\nconst PermissionProvider: React.FC = ({ children }) => {\n  const [permissions, setPerrmissions] = useState([]);\n  useEffect(() => {\n    permissionEvent.on(permissionEvent.name, (subjectPermissions: []) =>\n      Array.isArray(subjectPermissions)\n        ? setPerrmissions(subjectPermissions)\n        : error(\"Permission should to be array\")\n    );\n\n    return () => {\n      permissionEvent.removeAllListeners();\n    };\n  }, []);\n\n  return (\n    <PermissionContext.Provider value={permissions}>\n      {children}\n    </PermissionContext.Provider>\n  );\n};\n\nconst usePermissions = (): string[] => useContext(PermissionContext);\n\nconst withAuthentication = ({ authenticateSelector }: any) => (\n  Component: React.ComponentType<any>\n): any =>\n  connect((state: any) => ({ isAuthenticate: authenticateSelector(state) }))(\n    ({ isAuthenticate }) => {\n      useEffect(() => {\n        !isAuthenticate && redirect(AvailableRoutes.login);\n      }, []);\n      return isAuthenticate ? <Component /> : <span>401</span>;\n    }\n  );\n\nconst withPermissions = (\n  permissionName: string,\n  options?: WithPerrmissionOptions\n) => (Component: React.ComponentType<any>): React.FC => (props) => {\n  const permissions = usePermissions();\n  const forbiddenPage = options?.forbiddenPage ? (\n    <options.forbiddenPage />\n  ) : (\n    <span>403</span>\n  );\n\n  return permissions.includes(permissionName) ? (\n    <Component permissions={permissions} {...props} />\n  ) : (\n    forbiddenPage\n  );\n};\n\nexport {\n  PermissionContext,\n  PermissionProvider,\n  withPermissions,\n  permissionEvent,\n  withAuthentication,\n};\n","import { get } from \"lodash/fp\";\nimport { createSelector } from \"reselect\";\n\nexport const selectNames = {\n  authenticate: \"authenticate\",\n  isAuthenticate: \"isAuthenticate\",\n};\n\nconst getAuthenticateState = get(selectNames.authenticate);\n\nconst isAuthenticate = createSelector(\n  [getAuthenticateState],\n  get(selectNames.isAuthenticate)\n);\n\nexport { getAuthenticateState, isAuthenticate };\n","import { Layouts } from \"layouts/consts\";\nimport { assign, compose, map } from \"lodash/fp\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Route as RouteType } from \"routes/types\";\nimport { withIntl } from \"services/intl\";\nimport {\n  withAuthentication,\n  withPermissions,\n} from \"services/permission/module\";\nimport { isAuthenticate } from \"store/autheticate/selectors\";\nimport { loadable } from \"utils/loadable\";\n\nimport { AvailableRoutes } from \"./consts\";\n\nconst routesShape: any = {};\n\nconst dynamicPage = ({\n  name,\n  require,\n  pendingComponent = () => \"...\",\n}: any) => {\n  return loadable(\n    name,\n    () => require,\n    () => pendingComponent\n  );\n};\n\nconst extendRoute = ({\n  name,\n  page,\n  path,\n  layout = Layouts.BaseLayout,\n  breadcrumb,\n  link = () => path,\n  exact = true,\n  isGuest,\n}: RouteType): RouteType => {\n  const route = {\n    name,\n    path,\n    layout,\n    page: dynamicPage({ name, require: page }),\n    exact,\n    link,\n    isGuest,\n    breadcrumb: withIntl(({ intl }: any) => {\n      const firstLatterToUpperCase = (str: string) => str[0].toUpperCase();\n      const wordWithoutFirstLetter = (str: string) => str.slice(1);\n      const breadcrumbKey: string = \"layoutBreadcrumb\".concat(\n        firstLatterToUpperCase(name),\n        wordWithoutFirstLetter(name)\n      );\n\n      return <span>{breadcrumb || intl[breadcrumbKey]}</span>;\n    }),\n  };\n  routesShape[name] = route;\n  return route;\n};\n\nconst addPermissionWrapper = (route: RouteType): RouteType =>\n  route.isGuest\n    ? route\n    : assign(route, {\n        page: compose(\n          withAuthentication({ authenticateSelector: isAuthenticate }),\n          withPermissions(route.name)\n        )(route.page),\n      });\n\nconst buildRouter = map((route: RouteType, ...args: any) => {\n  const { layout = Layouts.EmptyLayout, page: Page, ...rest } = route;\n  const Layout = require(\"layouts\").Layouts[layout]; // eslint-disable-line @typescript-eslint/no-var-requires, global-require\n\n  return (\n    <Route\n      key={route.path}\n      render={(matchProps) => (\n        <Layout preparedRoutesForBreadcrumbs={args[1]}>\n          <Page {...matchProps} />\n        </Layout>\n      )}\n      {...rest}\n    />\n  );\n});\n\nconst getLink = (\n  routeName: keyof typeof AvailableRoutes,\n  ...args: any[]\n): string => routesShape[routeName].link(...args);\n\nexport { buildRouter, extendRoute, getLink, addPermissionWrapper };\n","import { createAction } from \"@reduxjs/toolkit\";\n\nimport { Config } from \"./types\";\n\nexport enum ETypes {\n  FETCH_CONFIG_REQUEST = \"@LAYOUT/FETCH_CONFIG_REQUEST\",\n  FETCH_CONFIG_RECEIVER = \"@LAYOUT/FETCH_CONFIG_RECEIVER\",\n  SIDER_TOGGLE_STATE = \"@LAYOUT/SIDER_STATE_TOGGLE\",\n}\n\nexport const fetchLayoutConfig = createAction(ETypes.FETCH_CONFIG_REQUEST);\nexport const saveLayoutConfig = createAction<Config>(\n  ETypes.FETCH_CONFIG_RECEIVER\n);\n\nexport const siderToggleState = createAction(ETypes.SIDER_TOGGLE_STATE);\n","import { EventEmitter } from \"events\";\n\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\n\nimport { DEFAULT_PENDING_NODE, EVENTS } from \"./consts\";\nimport { Dictionary, InnerProps, OuterProps, UseIntlConfig } from \"./types\";\n\nconst createEvent = () => new EventEmitter();\n\nconst intlEvent = createEvent();\n\nlet intlDictionary: Dictionary = null;\nconst IntlContext = React.createContext(intlDictionary);\n\nconst addIntlState = (\n  Component: React.ComponentType<InnerProps & OuterProps>\n): React.ComponentType<OuterProps> => {\n  const Wrapper = (props: OuterProps) => {\n    const [dictionary, setDictionary] = useState(intlDictionary);\n    const [pending, setPending] = useState(false);\n    useEffect(() => {\n      const onDictionarySet = (currentDictionary: Dictionary) => {\n        intlDictionary = currentDictionary;\n        setPending(false);\n        setDictionary(currentDictionary);\n      };\n\n      const onDictionaryInit = () => {\n        intlDictionary = null;\n        setPending(true);\n        setDictionary(null);\n      };\n\n      intlEvent.on(EVENTS.intlInit, onDictionaryInit);\n      intlEvent.on(EVENTS.intlEnd, onDictionarySet);\n\n      return () => {\n        intlEvent.removeAllListeners();\n      };\n    }, []);\n\n    return <Component {...props} dictionary={dictionary} pending={pending} />;\n  };\n\n  return Wrapper;\n};\n\nconst IntlComponent: React.FC<InnerProps & OuterProps> = ({\n  children,\n  pending,\n  dictionary,\n  pendingNode,\n}) => {\n  const showPreloader = pending && pendingNode;\n\n  return (\n    <IntlContext.Provider value={dictionary as any}>\n      {children}\n      {showPreloader ? pendingNode : null}\n    </IntlContext.Provider>\n  );\n};\n\nconst IntlProvider = addIntlState(IntlComponent);\n\nconst intlSelector = (target: Dictionary, options?: any) => (key: string) => {\n  return target\n    ? target[key] || key\n    : options?.pendingNode || DEFAULT_PENDING_NODE;\n};\n\nconst useIntl = (conf: UseIntlConfig = {}): { [k: string]: string } => {\n  const { pendingNode = DEFAULT_PENDING_NODE } = conf;\n  const intl = useContext(IntlContext);\n  const dictionary = useMemo(\n    () =>\n      new Proxy(intl || {}, {\n        get: (target: Dictionary | any, name: any) => {\n          return intlSelector(Object.keys(target).length ? target : null, {\n            pendingNode,\n          })(name);\n        },\n      }),\n    [intl, pendingNode]\n  );\n\n  return dictionary;\n};\n\nconst withIntl = (\n  Component:\n    | React.ComponentType<\n        { [k: string]: any } & { intl: { [k: string]: string } }\n      >\n    | React.FC\n) => (props: { [k: string]: any }): React.ReactNode => {\n  const intl = useIntl();\n\n  return <Component {...props} intl={intl} />;\n};\n\nconst intl = intlSelector(intlDictionary);\n\nexport {\n  IntlProvider,\n  intl,\n  useIntl,\n  withIntl,\n  IntlComponent,\n  addIntlState,\n  intlEvent,\n};\n","const EVENTS = {\n  intlInit: \"intl:init\",\n  intlEnd: \"intl:end\",\n};\n\nconst DEFAULT_PENDING_NODE = \"...\";\n\nexport { EVENTS, DEFAULT_PENDING_NODE };\n","import { EVENTS } from \"./consts\";\nimport { intlEvent } from \"./module\";\n\nconst initIntl = (): boolean => intlEvent.emit(EVENTS.intlInit, null);\nconst setIntl = (intl: { [k: string]: string }): boolean =>\n  intlEvent.emit(EVENTS.intlEnd, intl);\n\nexport { initIntl, setIntl };\n","import { History, createBrowserHistory } from \"history\";\n\nimport { BASE_PATH } from \"./consts\";\n\nconst history: History = createBrowserHistory({ basename: BASE_PATH });\n\nexport { history };\n","/* eslint no-console: \"off\" */\n\nimport { NODE_ENV } from \"consts\";\n\nconst error = (err: string): void => {\n  if (process.env.NODE_ENV !== NODE_ENV.production) throw new Error(err);\n  else console.error(err);\n};\n\nexport { error };\n","import { PayloadAction, createReducer } from \"@reduxjs/toolkit\";\n\nimport { ETypes as types } from \"./actions\";\nimport { Config, LayoutStore } from \"./types\";\n\nexport const initialState: LayoutStore = {\n  siderIsOpen: false,\n  config: {\n    menu: [\n      {\n        link: \"/\",\n        label: \"Home\",\n        icon: \"VerticalAlignTopOutlined\",\n      },\n    ],\n  },\n};\n\nexport const entryReducer = createReducer(initialState, {\n  [types.FETCH_CONFIG_RECEIVER]: (\n    state: LayoutStore,\n    { payload }: PayloadAction<Config>\n  ) => {\n    state.config = payload;\n    return state;\n  },\n  [types.SIDER_TOGGLE_STATE]: (state: LayoutStore) => {\n    state.siderIsOpen = !state.siderIsOpen;\n    return state;\n  },\n});\n","import { connectRouter } from \"connected-react-router\";\nimport { History } from \"history\";\nimport { Reducer, combineReducers } from \"redux\";\n\nimport * as reducers from \"./export-reducers\";\nimport { IStoreState } from \"./types\";\n\nconst createRootReducer = (history: History): Reducer<IStoreState> =>\n  combineReducers({\n    router: connectRouter(history),\n    ...reducers,\n  });\n\nexport { createRootReducer };\n","import { all } from \"redux-saga/effects\";\n\nimport * as allSagas from \"./export-sagas\";\n\nexport function* sagas(): Generator {\n  yield all(Object.values(allSagas).map((saga) => saga()));\n}\n","import { routerMiddleware } from \"connected-react-router\";\nimport { Store, applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { history } from \"routes/history\";\n\nimport { createRootReducer } from \"./reducers\";\nimport { sagas } from \"./sagas\";\n\nconst composeEnhancers = composeWithDevTools({});\nconst sagaMiddleware = createSagaMiddleware();\nconst initialState = window.initialState || {};\nconst configureStore: (preloadedState?: { [k: string]: any }) => Store<any> = (\n  preloadedState: any = initialState\n) => {\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    composeEnhancers(applyMiddleware(sagaMiddleware, routerMiddleware(history)))\n  );\n\n  return store;\n};\n\nconst store = configureStore();\n\nsagaMiddleware.run(sagas);\n\nexport { store, history };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"base_logo__3OJWq\",\"logo_img\":\"base_logo_img__2GSI-\",\"logo_link\":\"base_logo_link__1FG_D\",\"layout\":\"base_layout__3qiR3\",\"footer\":\"base_footer__2f3DN\",\"content\":\"base_content__3CMSZ\",\"site_layout_background\":\"base_site_layout_background__NsGE3\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport enum ETypes {\n  AUTHENTICATE_REQUEST = \"@LOGIN/AUTHENTICATE_REQUEST\",\n  AUTHENTICATE_RECEIVER = \"@LAYOUT/AUTHENTICATE_RECEIVE\",\n}\n\nexport const authenticate = createAction(ETypes.AUTHENTICATE_REQUEST);\nexport const authenticateReceive = createAction<any>(\n  ETypes.AUTHENTICATE_RECEIVER\n);\n","export { api } from \"./api\";\nexport { http } from \"./http\";\n"],"sourceRoot":""}